// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Restaurant.Infraestructure.Context;

#nullable disable

namespace Restaurant.Infraestructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240615054243_MigrationNocturna")]
    partial class MigrationNocturna
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Restaurant.Domain.Entitites.Cliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCliente"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCliente");

                    b.ToTable("Clientes", (string)null);
                });

            modelBuilder.Entity("Restaurant.Domain.Entitites.DetallePedido", b =>
                {
                    b.Property<int>("IdDetallePedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDetallePedido"));

                    b.Property<int?>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int?>("IdPedido")
                        .HasColumnType("int");

                    b.Property<int?>("IdPlato")
                        .HasColumnType("int");

                    b.Property<decimal?>("Subtotal")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdDetallePedido");

                    b.HasIndex("IdPedido");

                    b.HasIndex("IdPlato");

                    b.ToTable("DetallePedidos", (string)null);
                });

            modelBuilder.Entity("Restaurant.Domain.Entitites.Empleado", b =>
                {
                    b.Property<int>("IdEmpleado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEmpleado"));

                    b.Property<string>("Cargo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdEmpleado");

                    b.ToTable("Empleados", (string)null);
                });

            modelBuilder.Entity("Restaurant.Domain.Entitites.Factura", b =>
                {
                    b.Property<int>("IdFactura")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdFactura"));

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdPedido")
                        .HasColumnType("int");

                    b.Property<int?>("IdPedidoNavigationIdPedido")
                        .HasColumnType("int");

                    b.Property<decimal?>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdFactura");

                    b.HasIndex("IdPedidoNavigationIdPedido");

                    b.ToTable("Facturas", (string)null);
                });

            modelBuilder.Entity("Restaurant.Domain.Entitites.Menu", b =>
                {
                    b.Property<int>("IdPlato")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPlato"));

                    b.Property<string>("Categoria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdPlato");

                    b.ToTable("Menus", (string)null);
                });

            modelBuilder.Entity("Restaurant.Domain.Entitites.Mesa", b =>
                {
                    b.Property<int>("IdMesa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMesa"));

                    b.Property<int?>("Capacidad")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdMesa");

                    b.ToTable("Mesas", (string)null);
                });

            modelBuilder.Entity("Restaurant.Domain.Entitites.Pedido", b =>
                {
                    b.Property<int>("IdPedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPedido"));

                    b.Property<DateOnly?>("Fecha")
                        .HasColumnType("date");

                    b.Property<int?>("IdCliente")
                        .HasColumnType("int");

                    b.Property<int?>("IdMesa")
                        .HasColumnType("int");

                    b.Property<decimal?>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdPedido");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdMesa");

                    b.ToTable("Pedidos", (string)null);
                });

            modelBuilder.Entity("Restaurant.Domain.Entitites.DetallePedido", b =>
                {
                    b.HasOne("Restaurant.Domain.Entitites.Pedido", "IdPedidoNavigation")
                        .WithMany("DetallePedidos")
                        .HasForeignKey("IdPedido");

                    b.HasOne("Restaurant.Domain.Entitites.Menu", "IdPlatoNavigation")
                        .WithMany("DetallePedidos")
                        .HasForeignKey("IdPlato");

                    b.Navigation("IdPedidoNavigation");

                    b.Navigation("IdPlatoNavigation");
                });

            modelBuilder.Entity("Restaurant.Domain.Entitites.Factura", b =>
                {
                    b.HasOne("Restaurant.Domain.Entitites.Pedido", "IdPedidoNavigation")
                        .WithMany("Facturas")
                        .HasForeignKey("IdPedidoNavigationIdPedido");

                    b.Navigation("IdPedidoNavigation");
                });

            modelBuilder.Entity("Restaurant.Domain.Entitites.Pedido", b =>
                {
                    b.HasOne("Restaurant.Domain.Entitites.Cliente", "IdClienteNavigation")
                        .WithMany("Pedidos")
                        .HasForeignKey("IdCliente");

                    b.HasOne("Restaurant.Domain.Entitites.Mesa", "IdMesaNavigation")
                        .WithMany("Pedidos")
                        .HasForeignKey("IdMesa");

                    b.Navigation("IdClienteNavigation");

                    b.Navigation("IdMesaNavigation");
                });

            modelBuilder.Entity("Restaurant.Domain.Entitites.Cliente", b =>
                {
                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("Restaurant.Domain.Entitites.Menu", b =>
                {
                    b.Navigation("DetallePedidos");
                });

            modelBuilder.Entity("Restaurant.Domain.Entitites.Mesa", b =>
                {
                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("Restaurant.Domain.Entitites.Pedido", b =>
                {
                    b.Navigation("DetallePedidos");

                    b.Navigation("Facturas");
                });
#pragma warning restore 612, 618
        }
    }
}
